generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  relationMode = "prisma"
}

model UserAPILimit {
  id String @id @default(cuid())
  userId String @unique
  count Int @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserSubscription {
  id String @id @default(cuid())
  userId String @unique
  stripeCustomerId String? @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId String? @unique @map(name: "stripe_subscription_id")
  stripePriceId String? @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")
}

model ConvertJob {
  id String @id @default(cuid())
  userId String
  songName String
  cloneName String? // MUST be filled in before submitting
  needsSep Boolean? // MUST be filled in before submitting
  runpodJobId String? // MUST be filled in after job is submitted
  status String @default("NOT_SUBMITTED") // IN_QUEUE, IN_PROGRESS, COMPLETED, FAILED, FAILED_LOCALLY
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CloneJob {
  id String @id @default(cuid())
  userId String
  name String? // MUST BE filled in before submitting
  runpodJobId String? // MUST be filled in after job is created
  status String @default("NOT_SUBMITTED") // IN_QUEUE, IN_PROGRESS, COMPLETED, FAILED, FAILED_LOCALLY
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Clone {
  id String @id // provided by cloneJob.id
  userId String
  name String
  @@unique([userId, name]) // Names are unique
  createdAt DateTime @default(now())
}